name: Test

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - 'pyproject.toml'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - '**.py'
      - 'pyproject.toml'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: python-${{ matrix.python-version }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            python-${{ matrix.python-version }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libosmesa6-dev \
            xvfb \
            libglew-dev \
            patchelf \
            ffmpeg

      - name: Set Mujoco environment variables
        run: |
          echo "MUJOCO_GL=osmesa" >> $GITHUB_ENV
          echo "PYOPENGL_PLATFORM=osmesa" >> $GITHUB_ENV

      - name: Install Poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      - name: Run Tests
        run: |
          poetry run pip install pytest pytest-cov
          poetry run pytest tests/ --cov=mujoco_toolbox --cov-report=xml --maxfail=3 -v

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true