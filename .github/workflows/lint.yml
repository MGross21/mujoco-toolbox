name: Lint and Format
permissions:
  contents: write
  pull-requests: write

on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: python-3.10-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            python-3.10-pip-

      - name: Install Poetry and linting tools
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
          poetry add --group dev ruff black isort flake8 bandit pylint

      - name: Run Linters
        run: |
          poetry run ruff check . --fix --unsafe-fixes
          poetry run ruff format .
          poetry run black .
          poetry run isort .
          poetry run flake8 .
          poetry run bandit -r . --quiet
          poetry run pylint **/*.py

      - name: Commit Fixes if Needed
        if: github.event_name == 'pull_request'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: auto-fix linting issues"
            git push origin HEAD:${{ github.head_ref }}
          fi