name: PyPI

on:
  push:
    branches:
      - main
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  packages: write
  pull-requests: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: false  # Disable credentials from checkout action

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: python-3.10-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            python-3.10-pip-

      - name: Install Poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }} # Using PAT with repo scope
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry run semantic-release -v --strict publish
