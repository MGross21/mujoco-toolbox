name: PyPI Package
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main  # Triggers the workflow on commits to the `main` branch

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Cache Python dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install build tools
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      # Install dependencies from pyproject.toml
      - name: Install dependencies
        run: |
          pip install .

      # Run tests
      - name: Run tests
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -q

      # Build the package
      - name: Build package
        run: python -m build

      # Save build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      # Publish to PyPI
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*